# -*- coding: utf-8 -*-

"""
/***************************************************************************
 SpcProcessingAlgs
                                 A QGIS plugin
 Processing algorithms for SPC
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2018-09-14
        copyright            : (C) 2018 by Olivier Dalang / SPC
        email                : olivier.dalang@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

__author__ = 'Olivier Dalang / SPC'
__date__ = '2018-09-14'
__copyright__ = '(C) 2018 by Olivier Dalang / SPC'

# This will get replaced with a git SHA1 when you do a git archive

__revision__ = '$Format:%H$'

from PyQt5.QtCore import QCoreApplication
from qgis.core import (QgsProcessing,
                       QgsFeatureSink,
                       QgsProcessingAlgorithm,
                       QgsProcessingOutputString,
                       QgsProcessingParameterString,
                       QgsProcessingParameterDefinition,
                       QgsMessageLog)

import time

from .base import SpcAlgorithm

class ExpressionBuilder(SpcAlgorithm):

    _RANGE = range(5)

    ORIGINAL = 'ORIGINAL'
    VALUES = ['VALUE_'+str(i) for i in _RANGE]
    OUTPUT = 'OUTPUT'

    def initAlgorithm(self, config):
        self.addParameter(
            QgsProcessingParameterString(self.ORIGINAL, self.tr('Original string - use {0}, {1}, {2}, ... to be replaced by inputs'), multiLine=True)
        )

        for i in self._RANGE:
            self.addParameter(
                QgsProcessingParameterString(self.VALUES[i], self.tr('Replace value {}').format(i), optional=True)
            )
        self.addOutput(
            QgsProcessingOutputString(self.OUTPUT, self.tr('Output string'))
        )

    def processAlgorithm(self, parameters, context, feedback):
        string = self.parameterAsString(parameters, self.ORIGINAL, context)
        
        for i in self._RANGE:
            value = self.parameterAsString(parameters, 'VALUE_'+str(i), context)
            string = string.replace('{'+str(i)+'}', value)

        QgsMessageLog.logMessage('Result is {}'.format(string))

        return {self.OUTPUT: string}
